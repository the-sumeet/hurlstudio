name: Wails build

on:
  push:
    tags:
      # Match any new tag
      - '*'

env:
  # Necessary for most environments as build failure can occur due to OOM issues
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  build:
    strategy:
    # Failure in one platform build won't impact the others
      fail-fast: false
      matrix:
        build:
          - name: 'HurlStudio'
            platform:  'linux/amd64'
            os: 'ubuntu-22.04'
          - name: 'HurlStudio'
            platform:  'windows/amd64'
            os: 'windows-latest'
          - name: 'HurlStudio'
            platform:  'darwin/universal'
            os: 'macos-latest'

    runs-on: ${{ matrix.build.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.x'

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'frontend/package.json'

      - name: Install Linux build deps
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev build-essential pkg-config libglib2.0-dev
          # Ubuntu 22.04 runners provide WebKitGTK 4.0 which Wails expects
          sudo apt-get install -y libwebkit2gtk-4.0-dev

      - name: Verify WebKitGTK (Linux)
        if: runner.os == 'Linux'
        run: |
          pkg-config --modversion gtk+-3.0
          pkg-config --modversion webkit2gtk-4.0

      - name: Install Wails CLI
        shell: bash
        run: |
          go install github.com/wailsapp/wails/v2/cmd/wails@latest
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Build
        shell: bash
        env:
          # Ensure enough memory for frontend build
          NODE_OPTIONS: ${{ env.NODE_OPTIONS }}
        run: |
          # Build with a consistent app name to simplify packaging
          wails build -platform "${{ matrix.build.platform }}" -o "HurlStudio"

      - name: Compute artifact name
        id: artifact
        shell: bash
        run: |
          SAFE_PLATFORM="${{ matrix.build.platform }}"
          SAFE_PLATFORM="${SAFE_PLATFORM//\//-}"
          echo "name=${{ matrix.build.name }}-${SAFE_PLATFORM}-${{ runner.os }}" >> "$GITHUB_OUTPUT"

      - name: Zip macOS app bundle
        if: runner.os == 'macOS'
        id: maczip
        shell: bash
        run: |
          APP_PATH=$(find build/bin -maxdepth 2 -name "*.app" -type d | head -n 1)
          echo "App path: $APP_PATH"
          ZIP_PATH="${APP_PATH%.*}-macOS.zip"
          ditto -c -k --sequesterRsrc --keepParent "$APP_PATH" "$ZIP_PATH"
          echo "zip=$ZIP_PATH" >> "$GITHUB_OUTPUT"

      - name: Upload macOS artifact (zip)
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.artifact.outputs.name }}
          path: ${{ steps.maczip.outputs.zip }}

      - name: Upload artifact (non-macOS)
        if: runner.os != 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.artifact.outputs.name }}
          path: |
            build/bin/**
